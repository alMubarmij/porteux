--- obconf-qt/src/desktops.cpp	2024-04-24 16:58:08.569464627 +0200
+++ obconf-qt/src/desktops.cpp.patched	2024-04-24 19:09:40.437837953 +0200
@@ -19,12 +19,20 @@
     with this program; if not, write to the Free Software Foundation, Inc.,
     51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
 */
+#include <QtGlobal>
+
+#if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+  #include <QApplication>
+#endif
 
 #include "maindialog.h"
 #include <obrender/render.h>
 #include "tree.h"
 
-#include <QX11Info>
+#if QT_VERSION < QT_VERSION_CHECK(6, 0, 0)
+  #include <QX11Info>
+#endif
+
 #include <X11/Xlib.h>
 
 using namespace Obconf;
@@ -123,26 +131,54 @@
   }
 
   tree_apply();
-  /* make openbox re-set the property */
-  XDeleteProperty(QX11Info::display(), QX11Info::appRootWindow(),
+  
+  #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    auto x11NativeInterface = qApp->nativeInterface<QNativeInterface::QX11Application>();
+    auto display = x11NativeInterface->display();
+    auto appRootWindow = XDefaultRootWindow(x11NativeInterface->display());
+    
+    /* make openbox re-set the property */
+    XDeleteProperty(display, appRootWindow,
+                  XInternAtom(display, "_NET_DESKTOP_NAMES", False));
+  #else
+    /* make openbox re-set the property */
+    XDeleteProperty(QX11Info::display(), QX11Info::appRootWindow(),
                   XInternAtom(QX11Info::display(), "_NET_DESKTOP_NAMES", False));
+  #endif
 }
 
 void MainDialog::desktops_write_number() {
+  #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    auto x11NativeInterface = qApp->nativeInterface<QNativeInterface::QX11Application>();
+    auto display = x11NativeInterface->display();
+    auto appRootWindow = XDefaultRootWindow(x11NativeInterface->display());
+  #endif
+  
   XEvent ce;
   tree_set_int("desktops/number", num_desktops);
   ce.xclient.type = ClientMessage;
   ce.xclient.message_type =
-    XInternAtom(QX11Info::display(), "_NET_NUMBER_OF_DESKTOPS", False);
-  ce.xclient.display = QX11Info::display();
-  ce.xclient.window = QX11Info::appRootWindow();
+  #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+      XInternAtom(display, "_NET_NUMBER_OF_DESKTOPS", False);
+    ce.xclient.display = display;
+    ce.xclient.window = appRootWindow;
+  #else
+      XInternAtom(QX11Info::display(), "_NET_NUMBER_OF_DESKTOPS", False);
+    ce.xclient.display = QX11Info::display();
+    ce.xclient.window = QX11Info::appRootWindow();
+  #endif    
+    
   ce.xclient.format = 32;
   ce.xclient.data.l[0] = num_desktops;
   ce.xclient.data.l[1] = 0;
   ce.xclient.data.l[2] = 0;
   ce.xclient.data.l[3] = 0;
   ce.xclient.data.l[4] = 0;
-  XSendEvent(QX11Info::display(), QX11Info::appRootWindow(), FALSE,
+  #if QT_VERSION >= QT_VERSION_CHECK(6, 0, 0)
+    XSendEvent(display, appRootWindow, FALSE,
+  #else
+    XSendEvent(QX11Info::display(), QX11Info::appRootWindow(), FALSE,
+  #endif
              SubstructureNotifyMask | SubstructureRedirectMask,
              &ce);
 }
